@model IEnumerable<Frontend.Models.Product>
@{
    ViewData["Title"] = "Products";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0">Products</h2>
    <div>
        <button id="btnAdd" class="btn btn-success">
            <i class="bi bi-plus-lg"></i> Add Product
        </button>
    </div>
</div>

<div id="alerts"></div>

<table class="table table-hover table-striped align-middle" id="productsTable">
    <thead class="table-dark">
        <tr>
            <th style="width:5%">#</th>
            <th>Name</th>
            <th>Category</th>
            <th>Price</th>
            <th>Stock</th>
            <th style="width:18%">Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            int i = 1;
            foreach (var p in Model)
            {
                <tr data-id="@p.Id">
                    <td>@i</td>
                    <td>@p.Name</td>
                    <td>@p.Category</td>
                    <td>@p.Price</td>
                    <td>@p.Stock</td>
                    <td>
                        <button class="btn btn-sm btn-info btn-detail" data-id="@p.Id"><i class="bi bi-eye"></i></button>
                        <button class="btn btn-sm btn-warning btn-edit" data-id="@p.Id"><i class="bi bi-pencil"></i></button>
                        <button class="btn btn-sm btn-danger btn-delete" data-id="@p.Id"><i class="bi bi-trash"></i></button>
                    </td>
                </tr>
                i++;
            }
        }
    </tbody>
</table>

<!-- Modal: Create/Edit -->
<div class="modal fade" id="productModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-md modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="productModalTitle">Create Product</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="productForm">
            <input type="hidden" id="Id" />
            <div class="mb-3">
                <label class="form-label">Name</label>
                <input id="Name" class="form-control" required />
            </div>
            <div class="mb-3">
                <label class="form-label">Category</label>
                <select id="Category" class="form-select">
                    <option value="Electronics">Electronics</option>
                    <option value="Clothing">Clothing</option>
                    <option value="Baby">Baby</option>
                    <option value="Household">Household</option>
                    <option value="Grocery">Grocery</option>
                </select>
            </div>
            <div class="mb-3">
                <label class="form-label">Price</label>
                <input id="Price" class="form-control" type="number" step="0.01" />
            </div>
            <div class="mb-3">
                <label class="form-label">Stock</label>
                <input id="Stock" class="form-control" type="number" />
            </div>
        </form>
        <div id="modalAlert"></div>
      </div>
      <div class="modal-footer">
        <button id="saveBtn" class="btn btn-primary">Save</button>
        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal: Details -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-md modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Product Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <dl class="row">
            <dt class="col-sm-3">Name</dt><dd class="col-sm-9" id="dName"></dd>
            <dt class="col-sm-3">Category</dt><dd class="col-sm-9" id="dCategory"></dd>
            <dt class="col-sm-3">Price</dt><dd class="col-sm-9" id="dPrice"></dd>
            <dt class="col-sm-3">Stock</dt><dd class="col-sm-9" id="dStock"></dd>
        </dl>
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
    $(function () {
        const $productModal = new bootstrap.Modal(document.getElementById('productModal'));
        const $detailsModal = new bootstrap.Modal(document.getElementById('detailsModal'));

        function showAlert(type, message) {
            $('#alerts').html(`<div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>`);
        }

        // Open Create modal
        $('#btnAdd').click(function () {
            $('#productModalTitle').text('Create Product');
            $('#modalAlert').html('');
            $('#Id').val('');
            $('#Name').val('');
            $('#Category').val('Electronics');
            $('#Price').val('');
            $('#Stock').val('');
            $('#saveBtn').data('mode', 'create');
            $productModal.show();
        });

        // Open Edit modal
        $('.btn-edit').click(async function () {
            const id = $(this).data('id');
            $('#modalAlert').html('');
            const res = await $.get(`/Product/GetById?id=${id}`);
            if (res) {
                $('#productModalTitle').text('Edit Product');
                $('#Id').val(res.id);
                $('#Name').val(res.name);
                $('#Category').val(res.category);
                $('#Price').val(res.price);
                $('#Stock').val(res.stock);
                $('#saveBtn').data('mode', 'edit');
                $productModal.show();
            } else {
                showAlert('danger', 'Product not found');
            }
        });

        // Details
        $('.btn-detail').click(async function () {
            const id = $(this).data('id');
            const res = await $.get(`/Product/GetById?id=${id}`);
            if (res) {
                $('#dName').text(res.name);
                $('#dCategory').text(res.category);
                $('#dPrice').text(res.price);
                $('#dStock').text(res.stock);
                $detailsModal.show();
            } else {
                showAlert('danger', 'Product not found');
            }
        });

        // Delete
        $('.btn-delete').click(function () {
            const id = $(this).data('id');
            if (confirm('Are you sure you want to delete this product?')) {
                $.ajax({
                    url: `/Product/DeleteAjax?id=${id}`,
                    type: 'DELETE',
                    success: function () {
                        showAlert('success', 'Product deleted');
                        setTimeout(() => location.reload(), 600);
                    },
                    error: function (xhr) {
                        showAlert('danger', 'Delete failed: ' + xhr.responseText);
                    }
                });
            }
        });

        // Save
        $('#saveBtn').click(function () {
            const mode = $(this).data('mode') || 'create';
            const product = {
                id: $('#Id').val() || 0,
                name: $('#Name').val(),
                category: $('#Category').val(),
                price: parseFloat($('#Price').val()),
                stock: parseInt($('#Stock').val())
            };

            if (!product.name) {
                $('#modalAlert').html(`<div class="alert alert-warning">Name is required</div>`);
                return;
            }

            if (mode === 'create') {
                $.ajax({
                    url: '/Product/CreateAjax',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(product),
                    success: function () {
                        $productModal.hide();
                        showAlert('success', 'Product created');
                        setTimeout(() => location.reload(), 600);
                    },
                    error: function (xhr) {
                        $('#modalAlert').html(`<div class="alert alert-danger">Create failed: ${xhr.responseText}</div>`);
                    }
                });
            } else {
                $.ajax({
                    url: '/Product/EditAjax',
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(product),
                    success: function () {
                        $productModal.hide();
                        showAlert('success', 'Product updated');
                        setTimeout(() => location.reload(), 600);
                    },
                    error: function (xhr) {
                        $('#modalAlert').html(`<div class="alert alert-danger">Update failed: ${xhr.responseText}</div>`);
                    }
                });
            }
        });
    });
</script>
}
